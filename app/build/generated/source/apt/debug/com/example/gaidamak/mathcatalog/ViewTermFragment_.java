//
// DO NOT EDIT THIS FILE, IT HAS BEEN GENERATED USING AndroidAnnotations 3.1.
//


package com.example.gaidamak.mathcatalog;

import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.Menu;
import android.view.MenuInflater;
import android.view.MenuItem;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import com.example.gaidamak.mathcatalog.R.layout;
import org.androidannotations.api.builder.FragmentBuilder;
import org.androidannotations.api.view.HasViews;
import org.androidannotations.api.view.OnViewChangedListener;
import org.androidannotations.api.view.OnViewChangedNotifier;

public final class ViewTermFragment_
    extends com.example.gaidamak.mathcatalog.ViewTermFragment
    implements HasViews, OnViewChangedListener
{

    private final OnViewChangedNotifier onViewChangedNotifier_ = new OnViewChangedNotifier();
    private View contentView_;
    public final static String TERM_ID_ARG = "termId";

    @Override
    public void onCreate(Bundle savedInstanceState) {
        OnViewChangedNotifier previousNotifier = OnViewChangedNotifier.replaceNotifier(onViewChangedNotifier_);
        init_(savedInstanceState);
        super.onCreate(savedInstanceState);
        OnViewChangedNotifier.replaceNotifier(previousNotifier);
    }

    @Override
    public View findViewById(int id) {
        if (contentView_ == null) {
            return null;
        }
        return contentView_.findViewById(id);
    }

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
        contentView_ = super.onCreateView(inflater, container, savedInstanceState);
        if (contentView_ == null) {
            contentView_ = inflater.inflate(layout.fragment_view_term, container, false);
        }
        return contentView_;
    }

    private void init_(Bundle savedInstanceState) {
        OnViewChangedNotifier.registerOnViewChangedListener(this);
        injectFragmentArguments_();
        setHasOptionsMenu(true);
    }

    @Override
    public void onViewCreated(View view, Bundle savedInstanceState) {
        super.onViewCreated(view, savedInstanceState);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    public static ViewTermFragment_.FragmentBuilder_ builder() {
        return new ViewTermFragment_.FragmentBuilder_();
    }

    @Override
    public void onViewChanged(HasViews hasViews) {
        descriptionTextView = ((TextView) hasViews.findViewById(com.example.gaidamak.mathcatalog.R.id.description_textview));
        tagsTextView = ((TextView) hasViews.findViewById(com.example.gaidamak.mathcatalog.R.id.tags_textview));
        initViews();
    }

    private void injectFragmentArguments_() {
        Bundle args_ = getArguments();
        if (args_!= null) {
            if (args_.containsKey(TERM_ID_ARG)) {
                termId = ((Long) args_.getSerializable(TERM_ID_ARG));
            }
        }
    }

    @Override
    public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
        inflater.inflate(com.example.gaidamak.mathcatalog.R.menu.fragment_view_term_menu, menu);
        super.onCreateOptionsMenu(menu, inflater);
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        boolean handled = super.onOptionsItemSelected(item);
        if (handled) {
            return true;
        }
        int itemId_ = item.getItemId();
        if (itemId_ == com.example.gaidamak.mathcatalog.R.id.action_edit) {
            edit();
            return true;
        }
        return false;
    }

    public static class FragmentBuilder_
        extends FragmentBuilder<ViewTermFragment_.FragmentBuilder_, com.example.gaidamak.mathcatalog.ViewTermFragment>
    {


        @Override
        public com.example.gaidamak.mathcatalog.ViewTermFragment build() {
            ViewTermFragment_ fragment_ = new ViewTermFragment_();
            fragment_.setArguments(args);
            return fragment_;
        }

        public ViewTermFragment_.FragmentBuilder_ termId(Long termId) {
            args.putSerializable(TERM_ID_ARG, termId);
            return this;
        }

    }

}
