//
// DO NOT EDIT THIS FILE, IT HAS BEEN GENERATED USING AndroidAnnotations 3.1.
//


package com.example.gaidamak.mathcatalog;

import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import com.example.gaidamak.mathcatalog.R.layout;
import org.androidannotations.api.BackgroundExecutor;
import org.androidannotations.api.builder.FragmentBuilder;
import org.androidannotations.api.view.HasViews;
import org.androidannotations.api.view.OnViewChangedListener;
import org.androidannotations.api.view.OnViewChangedNotifier;

public final class SplashScreenFragment_
    extends com.example.gaidamak.mathcatalog.SplashScreenFragment
    implements HasViews, OnViewChangedListener
{

    private final OnViewChangedNotifier onViewChangedNotifier_ = new OnViewChangedNotifier();
    private View contentView_;
    public final static String EXPLICIT_CALL_ARG = "explicitCall";

    @Override
    public void onCreate(Bundle savedInstanceState) {
        OnViewChangedNotifier previousNotifier = OnViewChangedNotifier.replaceNotifier(onViewChangedNotifier_);
        init_(savedInstanceState);
        super.onCreate(savedInstanceState);
        OnViewChangedNotifier.replaceNotifier(previousNotifier);
    }

    @Override
    public View findViewById(int id) {
        if (contentView_ == null) {
            return null;
        }
        return contentView_.findViewById(id);
    }

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
        contentView_ = super.onCreateView(inflater, container, savedInstanceState);
        if (contentView_ == null) {
            contentView_ = inflater.inflate(layout.fragment_splash_screen, container, false);
        }
        return contentView_;
    }

    private void init_(Bundle savedInstanceState) {
        pref = new SharePreferences_(getActivity());
        OnViewChangedNotifier.registerOnViewChangedListener(this);
        injectFragmentArguments_();
    }

    @Override
    public void onViewCreated(View view, Bundle savedInstanceState) {
        super.onViewCreated(view, savedInstanceState);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    public static SplashScreenFragment_.FragmentBuilder_ builder() {
        return new SplashScreenFragment_.FragmentBuilder_();
    }

    @Override
    public void onViewChanged(HasViews hasViews) {
        hintText = hasViews.findViewById(com.example.gaidamak.mathcatalog.R.id.hint_for_user_text);
        {
            View view = hasViews.findViewById(com.example.gaidamak.mathcatalog.R.id.main_layout);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        SplashScreenFragment_.this.close();
                    }

                }
                );
            }
        }
        tryAutoclose();
    }

    private void injectFragmentArguments_() {
        Bundle args_ = getArguments();
        if (args_!= null) {
            if (args_.containsKey(EXPLICIT_CALL_ARG)) {
                explicitCall = args_.getBoolean(EXPLICIT_CALL_ARG);
            }
        }
    }

    @Override
    public void autoclose() {
        BackgroundExecutor.execute(new BackgroundExecutor.Task("", 0, "") {


            @Override
            public void execute() {
                try {
                    SplashScreenFragment_.super.autoclose();
                } catch (Throwable e) {
                    Thread.getDefaultUncaughtExceptionHandler().uncaughtException(Thread.currentThread(), e);
                }
            }

        }
        );
    }

    public static class FragmentBuilder_
        extends FragmentBuilder<SplashScreenFragment_.FragmentBuilder_, com.example.gaidamak.mathcatalog.SplashScreenFragment>
    {


        @Override
        public com.example.gaidamak.mathcatalog.SplashScreenFragment build() {
            SplashScreenFragment_ fragment_ = new SplashScreenFragment_();
            fragment_.setArguments(args);
            return fragment_;
        }

        public SplashScreenFragment_.FragmentBuilder_ explicitCall(boolean explicitCall) {
            args.putBoolean(EXPLICIT_CALL_ARG, explicitCall);
            return this;
        }

    }

}
